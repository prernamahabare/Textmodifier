{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","about","onClick","togglemode","htmlFor","Textform","useState","Text","settext","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","placeholder","disabled","length","newtext","toUpperCase","showalert","toLowerCase","replace","s","navigator","clipboard","writeText","split","join","filter","element","About","mystyle","Alert","height","alert","class","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setmode","setalert","message","setTimeout","document","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ae908b68.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/About\">{props.about}</Link>\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.togglemode}/>\r\n              <label className =\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\n// Declare to give a fixed datatype to the props. This Function Tell us a proptype\r\n// isRequired is use for the compulsory declaration of a props.\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string\r\n};\r\n\r\n//This function provides a default props when props are not declared.\r\nNavbar.defaultProps = {\r\n  title: 'Give a title',\r\n  about: 'Show the about'\r\n};\r\n\r\n","import React, { useState } from 'react';\r\n\r\nexport default function Textform(props) {\r\n    //onchnage = use for write or paste the text in textarea\r\n    const handelonchange = (event) => {\r\n        console.log(\"onchnage\");\r\n        settext(event.target.value);\r\n    }\r\n\r\n    //uppercase\r\n    const handleupCilck = () => {\r\n        let newtext = Text.toUpperCase();\r\n        settext(newtext);\r\n        props.showalert(\"Converted to Uppercase\", \"success\")\r\n    }\r\n\r\n    //lowercase\r\n    const handleloCilck = () => {\r\n        let newtext = Text.toLowerCase();\r\n        settext(newtext);\r\n        props.showalert(\"Converted to Lowercase\", \"success\")\r\n    }\r\n\r\n    //titelcase\r\n    const handletiCilck = () => {\r\n        let newtext = Text.replace(/\\b(\\w)/g, s => s.toUpperCase());\r\n        settext(newtext);\r\n        props.showalert(\"Converted to Titlecase\", \"success\")\r\n    }\r\n    //cleartext\r\n    const handleclCilck = () => {\r\n        let newtext = (\"\");\r\n        settext(newtext);\r\n        props.showalert(\"Cleared Text\", \"success\")\r\n    }\r\n\r\n    //to copy text\r\n    const handlecopy = () => {\r\n        navigator.clipboard.writeText(Text);\r\n        props.showalert(\"Copied!\", \"success\")\r\n    }\r\n    //to handle extraspaces\r\n    const handleExtraspaces = () => {\r\n        let newtext = Text.split(/[ ] + /);\r\n        settext(newtext.join(\" \"));\r\n        props.showalert(\"Extraspeces are removed successfully \", \"success\")\r\n    }\r\n\r\n    // Declare a new state variable, which we'll call \"text\". we cannot modifity this variable directly. to chnage the varible we can use settext method\r\n    const [Text, settext] = useState(\"\");\r\n\r\n    return (\r\n        <>\r\n            <div style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h2>{props.heading}</h2>\r\n                <div className=\"mb-2\">\r\n                    <textarea className=\"form-control\" value={Text} onChange={handelonchange} id=\"exampleFormControlTextarea1\"\r\n                        style={{ backgroundColor: props.mode === 'dark' ? '#474646' : 'white', color: props.mode === 'dark' ? 'white' : 'black' }} rows=\"6\" placeholder=\"Enter or Paste your text here\"></textarea>\r\n                </div>\r\n                <button disabled={Text.length === 0} className=\"btn btn-dark mx-2 my-1\" onClick={handleupCilck}>UpperCase</button>\r\n                <button disabled={Text.length === 0} className=\"btn btn-dark mx-2 my-1\" onClick={handleloCilck}>LowerCase</button>\r\n                <button disabled={Text.length === 0} className=\"btn btn-dark mx-2 my-1\" onClick={handletiCilck}>TitleCase</button>\r\n                <button disabled={Text.length === 0} className=\"btn btn-dark mx-2 my-1\" onClick={handleclCilck}>ClearText</button>\r\n                <button disabled={Text.length === 0} className=\"btn btn-dark mx-2 my-1\" onClick={handlecopy}>CopyText</button>\r\n                <button disabled={Text.length === 0} className=\"btn btn-dark mx-2 my-1\" onClick={handleExtraspaces}>Remove extra spaces</button>\r\n                <div className=\"container my-2\">\r\n                    <h4>Your text summary </h4>\r\n\r\n                    <p>{Text.split(/\\s+/).filter((element) => { return element.length !== 0 }).length} words and {Text.length} character</p>\r\n\r\n                    <p>You need {0.08 * Text.split(\" \").filter((element) => { return element.length !== 0 }).length}min time to read above text </p>\r\n\r\n                    <h5>Text Preview</h5>\r\n\r\n                    <p>{Text.length > 0 ? Text : \"Enter the text to preview here\"}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    const mystyle = {\r\n        color : props.mode === 'dark'? 'white':'#302f2f',\r\n        backgroundColor : props.mode === 'dark'? '#302f2f':'white',\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container my-2 py-3\" >\r\n                <h2 style={{color:props.mode === 'dark'? 'white':'#302f2f'}}>About Us</h2>\r\n                <div className=\"accordion\" id=\"accordionExample\">\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                            <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"style={mystyle}>\r\n                            <strong>Easy To Use</strong>\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\"style={mystyle}>\r\n                                TextModifier is very simple and easy to use application. It is a use to make text beautiful and the order as user accepts.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\"style={mystyle}>\r\n                            <strong>About TextModifier</strong>\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\"style={mystyle}>\r\n                               Our wish to make your text standard and beautiful.\r\n                                TextModifier application created in 2021 by the developer PRERNA MAHABARE. she is a very ambitious and smart designer born in 24 sept 2003.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\"style={mystyle} >\r\n                            <strong>Free For All.</strong>\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\"style={mystyle}>\r\n                                TextModifier is costless application u use in your moblie,pc's or in laptop. We hope the expericence of using our application is must be good all the time.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n\r\n    return (\r\n            <div style={{height :'53px'}}>\r\n            {props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  //to set mode defalut mode is light\n  const [mode, setmode] = useState('light');\n\n  //to set alert after clicking any button\n  const [alert, setalert] = useState(null);\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 2000);\n  }\n\n  //to change mode to dark or light\n  const togglemode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = \"#39373c\";\n      showalert(\"The Dark Mode Enable\", \"success\");\n      //document.title = \"TextModifier - Dark Mode\"\n    }\n    else {\n      setmode('light')\n      document.body.style.backgroundColor = \"white\";\n      showalert(\"The Light Mode Enable\", \"success\");\n      //document.title = \"TextModifier - Light Mode\"\n    }\n  }\n\n  return (\n     <>\n       <Router>\n        {/* Declear a props here */}\n        <Navbar title=\"TextModifier\" about=\"About us\" mode={mode} togglemode={togglemode} />\n        {/* Here props are automatic generated becaues we give function of defualtprops in navbar.js */}\n        {/* <Navbar /> */}\n\n        {/* to view alert in application  */}\n        <Alert alert={alert} />\n        \n        {/* to use functionality of router in application */}\n        <Switch>\n          <Route path=\"/about\">\n            <div className=\"container\">\n              <About  mode={mode} className=\"Active\"/>\n            </div>\n          </Route>\n          <Route path=\"/\">\n            <div className=\"container\" mode={mode}>\n              <Textform showalert={showalert} heading=\"Enter your text\" mode={mode} className=\"Active\" />\n            </div>\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}