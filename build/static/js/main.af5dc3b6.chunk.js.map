{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","about","onClick","togglemode","htmlFor","Textform","useState","Text","settext","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","placeholder","newtext","toUpperCase","showalert","toLowerCase","replace","s","text","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","class","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setmode","setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.af5dc3b6.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">{props.about}</a>\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.togglemode}/>\r\n              <label className =\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\n// Declare to give a fixed datatype to the props. This Function Tell us a proptype\r\n// isRequired is use for the compulsory declaration of a props.\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string\r\n};\r\n\r\n//This function provides a default props when props are not declared.\r\nNavbar.defaultProps = {\r\n  title: 'Give a title',\r\n  about: 'Show the about'\r\n};\r\n\r\n","import React, { useState } from 'react';\r\n\r\n\r\nexport default function Textform(props) {\r\n    const handelonchange = (event) => {\r\n        console.log(\"onchnage\");\r\n        settext(event.target.value);   \r\n    }\r\n\r\n    const handleupCilck = () => {\r\n        let newtext = Text.toUpperCase();\r\n        settext(newtext);\r\n        props.showalert(\"Converted to Uppercase\",\"success\")   \r\n    }\r\n    const handleloCilck = () => {\r\n        let newtext = Text.toLowerCase();\r\n        settext(newtext);\r\n        props.showalert(\"Converted to Lowercase\",\"success\")\r\n    }\r\n\r\n    const handletiCilck = () => {\r\n        let newtext = Text.replace(/\\b(\\w)/g, s => s.toUpperCase());\r\n        settext(newtext);\r\n        props.showalert(\"Converted to Titlecase\",\"success\")\r\n    }\r\n\r\n    const handleclCilck = () => {\r\n        let newtext = (\" \");\r\n        settext(newtext);\r\n        props.showalert(\"Cleared Text\",\"success\")\r\n        // document.textarea.placeholder=\"Enter or Paste your text here\"\r\n    }\r\n\r\n    const handlecopy = () => {\r\n        var text = document.getElementById('exampleFormControlTextarea1');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showalert(\"Copied!\",\"success\")\r\n    }\r\n\r\n    const handleExtraspaces = () => {\r\n        let newtext = Text.split(/[ ] + /);\r\n        settext(newtext.join(\" \"));\r\n        props.showalert(\"Extraspeces are removed successfully \",\"success\")\r\n    }\r\n\r\n    // Declare a new state variable, which we'll call \"count\"\r\n    const [Text, settext] = useState(\" \");\r\n\r\n    return (\r\n        <>\r\n            <div style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h2>{props.heading}</h2>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={Text} onChange={handelonchange} id=\"exampleFormControlTextarea1\"\r\n                        style={{ backgroundColor: props.mode === 'dark' ? '#474646' : 'white',color:props.mode === 'dark' ? 'white' : 'black' }} rows=\"8\" placeholder=\"Enter or Paste your text here\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-dark mx-2\" onClick={handleupCilck}>UpperCase</button>\r\n                <button className=\"btn btn-dark mx-2\" onClick={handleloCilck}>LowerCase</button>\r\n                <button className=\"btn btn-dark mx-2\" onClick={handletiCilck}>TitleCase</button>\r\n                <button className=\"btn btn-dark mx-2\" onClick={handleclCilck}>ClearText</button>\r\n                <button className=\"btn btn-dark mx-2\" onClick={handlecopy}>CopyText</button>\r\n                <button className=\"btn btn-dark mx-2\" onClick={handleExtraspaces}>Remove extra spaces</button>\r\n                <div className=\"container my-2\">\r\n                    <h4>Your text summary </h4>\r\n                    <p>{Text.split(\" \").length-1} words and {Text.length} character</p>\r\n                    <p>You need {0.08 * Text.split(\" \").length}min time to read above text </p>\r\n                    <h5>Text Preview</h5>\r\n                    <p>{Text.length>0?Text:\"Enter the text to preview here\"}</p>\r\n                </div>\r\n            </div>\r\n        </>    \r\n    )\r\n}\r\n ","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n        \r\n\r\n    return (\r\n        props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\n//import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n\n  const [alert, setalert] = useState(null);\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 2000);\n  }\n\n\n  const togglemode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = \"#39373c\";\n      showalert(\"The Dark Mode Enable\", \"success\");\n      document.title = \"TextModifier - Dark Mode\"\n    }\n    else {\n      setmode('light')\n      document.body.style.backgroundColor = \"white\";\n      showalert(\"The Light Mode Enable\", \"success\");\n      document.title = \"TextModifier - Light Mode\"\n    }\n  }\n  return (\n     <>\n    {/* //   <Router> */}\n        {/* Declear a props here */}\n        <Navbar title=\"TextModifier\" about=\"About us\" mode={mode} togglemode={togglemode} />\n        {/* Here props are automatic generated becaues we give function of defualtprops in navbar.js */}\n        {/* <Navbar /> */}\n\n        <Alert alert={alert} />\n\n\n        {/* <div className=\"container\" mode={mode}>\n          <Textform showalert={showalert} heading=\"Enter your text\" mode={mode} />\n        </div> */}\n\n        {/* <div className=\"container\">\n        <About/>\n      </div> */}\n\n        {/* <Switch>\n          <Route path=\"/about\">\n            <div className=\"container\">\n              <About />\n            </div>\n          </Route>\n          <Route path=\"/\"> */}\n            <div className=\"container\" mode={mode}>\n              <Textform showalert={showalert} heading=\"Enter your text\" mode={mode} />\n            </div>\n          {/* </Route>\n        </Switch>\n      </Router> */}\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}